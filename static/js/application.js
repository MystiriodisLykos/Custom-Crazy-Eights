// Generated by CoffeeScript 1.12.4
(function() {
  var cards, name, players, server, ws_scheme;

  if (window.location.protocol === 'https:') {
    ws_scheme = 'wss://';
  } else {
    ws_scheme = 'ws://';
  }

  server = new ReconnectingWebSocket(ws_scheme + location.host + "/server");

  name = '';

  cards = [];

  players = {};

  server.onmessage = function(message) {
    message = JSON.parse(message.data);
    switch (message.type) {
      case 'welcome':
        players[message['data']] = {
          'cards': 0,
          'ready': false
        };
        break;
      case 'start':
        console.log('start');
        break;
      case 'error':
        console.log('error');
        break;
      case 'give':
        console.log('give');
        break;
      case 'uno':
        console.log('uno');
        break;
      case 'turn':
        console.log('turn');
        break;
      case 'gg':
        console.log('gg');
        break;
      default:
        console.log('unknown response');
    }
    if (message.type === 'welcome') {
      $('#ready').css('display', 'inline');
    }
    if (message.type === 'start') {
      $('#ready').css('display', 'none');
      $('#draw').css('display', 'inline');
    }
  };

  $('#ready').click(function(e) {
    var data, message, type;
    e.preventDefault();
    type = 'ready';
    data = '';
    message = JSON.stringify({
      name: name,
      type: type,
      data: data
    });
    console.log(message);
    server.send(message);
  });

  $('#draw').click(function(e) {
    var data, message, type;
    e.preventDefault();
    type = 'draw';
    data = '';
    message = JSON.stringify({
      name: name,
      type: type,
      data: data
    });
    console.log(message);
    server.send(message);
  });

  $('#enter').on('submit', function(e) {
    var data, message, type;
    e.preventDefault();
    if ($('#name')[0].value !== '') {
      name = $('#name')[0].value;
      type = 'add';
      data = '';
      message = JSON.stringify({
        name: name,
        type: type,
        data: data
      });
      console.log(message);
      server.send(message);
    }
  });

}).call(this);

//# sourceMappingURL=application.js.map
